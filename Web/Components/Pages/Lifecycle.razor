@page "/lifecycle"

<PageTitle>Lifecycle</PageTitle>

<h3 class="text-success">Blazor LifeCycle</h3>

<p role="status">Current count: @currentCount</p>
<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>



@foreach(var n in EventTypes)
{
    <p>@n</p>
    <hr />
}


<div class="border">
    <_lifecycleChild CountValue="@currentCount"></_lifecycleChild>
</div>

@code {
    private int currentCount = 0;
    List<string> EventTypes = new();

    private void IncrementCount()
    {
        currentCount++;
    }

    @*OnInitializedAsync and OnInitialized are called after the component has fully loaded*@
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(10);
        EventTypes.Add("OnInitializeAsync in parent");
    }

    protected override void OnInitialized()
    {
        EventTypes.Add("OnInitialize in parent");
    }

    @*OnParametersSetAsync and OnParametersSet are called when component is first initialized and each time new or updated parameters are received from the parent in the render state*@
    protected override void OnParametersSet()
    {
        EventTypes.Add("OnParametersSet in parent");
    }

    protected override async Task OnParametersSetAsync()
    {
        await Task.Delay(10);
        EventTypes.Add("OnParametersSetAsync in parent");
    }

    @*OnAfterRenderAsync and OnAfterRender are called after the component has already rendered. You cannot see its value on first render but on the second render.*@
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Task.Delay(10);
        EventTypes.Add("OnAfterRenderAsync in parent");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        EventTypes.Add("OnAfterRender in parent");
    }

}