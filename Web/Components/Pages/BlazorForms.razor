@page "/forms"
<PageTitle>Blazor Forms</PageTitle>

<div class="row justify-content-center">
    <div class="col-12 offset-col-2 col-md-8">
        <div class="text-center pt-4">
            <h3 class="text-success">Product form</h3>
        </div>
        <div class="mx-2 px-2">
            <EditForm FormName="productCreate" Model="@product" OnValidSubmit="HandleProductCreate">
                 <DataAnnotationsValidator />
                 <ValidationSummary />
                <div class="form-group py-2">
                    <p>Name</p>
                    <InputText class="form-control" @bind-Value="@product.Name" />
                    <ValidationMessage For="@(() => product.Name)" />
                </div>
                <div class="form-group py-2">
                    <p>Description</p>
                    <InputText class="form-control" @bind-Value="@product.Description" />
                    <ValidationMessage For="@(() => product.Description)" />
                </div>
                <div class="form-group py-2">
                    <p>Price</p>
                    <InputNumber class="form-control" @bind-Value="@product.Price" />
                    <ValidationMessage For="@(() => product.Price)" />
                </div>
                <div class="form-group py-2">
                    <p>Category</p>
                    <InputSelect class="form-select" @bind-Value="@product.Category">
                        <option value="">----Select category-----</option>
                        @foreach(var n in Enum.GetValues(typeof(Categories)))
                        {
                            <option value="@n">@n</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => product.Category)" />
                </div>
                <div class="form-group py-2">
                    <p>Is Active</p>
                    <InputCheckbox @bind-Value="@product.IsActive" />
                </div>
                <div class="form-group py-2">
                    <p>Is Available form</p>
                    <InputDate class="form-control" @bind-Value="@product.IsAvailableFrom" />
                    <ValidationMessage For="@(() => product.IsAvailableFrom)" />
                </div>
                <button type="submit" class="btn btn-dark my-3 w-25">Submit Form</button>
                <p class="text-danger">@(IsProcessing == true? "Processing....": "")</p>
            </EditForm>
        </div>

    </div>
</div>
@code {
    [SupplyParameterFromForm(FormName = "productCreate")]
    public Product product { get; set; } = new();
    private bool IsProcessing = false;

    private async Task HandleProductCreate()
    {
        IsProcessing = true;
        await Task.Delay(500);
    }
}
